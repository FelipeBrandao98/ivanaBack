// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Mailer
model Mailer {
  id        Int      @id @default(autoincrement())
  mail      String   @unique
  createdAt DateTime @default(now())
}

// Images
model Image {
  id         Int          @id @default(autoincrement())
  src        String       @unique
  url        String
  author     String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  News       News[]
  Collection Collection[]
}

// News
model News {
  id          Int           @id @default(autoincrement())
  category    NewsCategory? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  title       String        @unique
  cover       Image?        @relation(fields: [coverId], references: [id])
  coverId     Int?
  coverCredit String
  subtitle    String        @unique
  publishDate DateTime      @default(now())
  published   Boolean       @default(false)
  body        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model NewsCategory {
  id          Int      @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  News        News[]
}

// Collections
model Collection {
  id               Int                 @id @default(autoincrement())
  title            String
  description      String
  category         CollectionCategory? @relation(fields: [categoryId], references: [id])
  categoryId       Int?
  cover            Image?              @relation(fields: [coverId], references: [id])
  coverId          Int?
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  CollectionImages CollectionImages[]
}

model CollectionCategory {
  id             Int          @id @default(autoincrement())
  description    String
  subdescription String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  Collection     Collection[]
}

model CollectionImages {
  id           Int         @id @default(autoincrement())
  src          String      @unique
  url          String
  author       String?
  collection   Collection? @relation(fields: [collectionId], references: [id])
  collectionId Int?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}
